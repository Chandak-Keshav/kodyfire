<template>
  <div class="auth-wrapper auth-v1 px-2">
    <div class="auth-inner py-2">
      <!-- Reset Password v1 -->
      <b-card class="mb-0">
        <!-- logo -->
        <b-link class="brand-logo">
          <h2 class="brand-text text-primary ml-1">Muqaym</h2>
        </b-link>

        <b-card-title class="mb-1"> تفعيل الحساب 🔒 </b-card-title>
        <b-card-text class="mb-2">
          خطوة اخيرة قبل الإنتهاء من عملية تفعيل الحساب
        </b-card-text>
        <b-alert v-model="showMessage" dismissible :variant="messageType">
          <div class="alert-body">
            <feather-icon class="mr-25" icon="InfoIcon" />
            <span class="ml-25" v-html="message"></span>
          </div>
        </b-alert>
        <!-- form -->
        <validation-observer ref="resetPasswordForm">
          <b-form
            method="POST"
            class="auth-reset-password-form mt-2"
            @submit.prevent="validationForm"
          >
            <!-- password -->
            <b-form-group
              label="كلمة المرور الجديدة"
              label-for="reset-password-new"
            >
              <validation-provider
                #default="{ errors }"
                name="Password"
                vid="Password"
                rules="required|password"
              >
                <b-input-group
                  class="input-group-merge"
                  :class="errors.length > 0 ? 'is-invalid' : null"
                >
                  <b-form-input
                    id="reset-password-new"
                    v-model="password"
                    :type="password1FieldType"
                    :state="errors.length > 0 ? false : null"
                    class="form-control-merge"
                    name="reset-password-new"
                    placeholder="············"
                  />
                  <b-input-group-append is-text>
                    <feather-icon
                      class="cursor-pointer"
                      :icon="password1ToggleIcon"
                      @click="togglePassword1Visibility"
                    />
                  </b-input-group-append>
                </b-input-group>
                <small class="text-danger">{{ errors[0] }}</small>
              </validation-provider>
            </b-form-group>

            <!-- confirm password -->
            <b-form-group
              label-for="reset-password-confirm"
              label="تأكيد كلمة المرور"
            >
              <validation-provider
                #default="{ errors }"
                name="Confirm Password"
                rules="required|confirmed:Password"
              >
                <b-input-group
                  class="input-group-merge"
                  :class="errors.length > 0 ? 'is-invalid' : null"
                >
                  <b-form-input
                    id="reset-password-confirm"
                    v-model="password_confirmation"
                    :type="password2FieldType"
                    class="form-control-merge"
                    :state="errors.length > 0 ? false : null"
                    name="reset-password-confirm"
                    placeholder="············"
                  />
                  <b-input-group-append is-text>
                    <feather-icon
                      class="cursor-pointer"
                      :icon="password2ToggleIcon"
                      @click="togglePassword2Visibility"
                    />
                  </b-input-group-append>
                </b-input-group>
                <small class="text-danger">{{ errors[0] }}</small>
              </validation-provider>
            </b-form-group>

            <!-- submit button -->
            <b-button block type="submit" variant="primary">
              تعيين كلمة مرور جديدة
            </b-button>
          </b-form>
        </validation-observer>
      </b-card>
      <!-- /Reset Password v1 -->
    </div>
  </div>
</template>

<script>
import { ValidationProvider, ValidationObserver } from "vee-validate";
import VuexyLogo from "@core/layouts/components/Logo.vue";
import {
  BAlert,
  BCard,
  BCardTitle,
  BCardText,
  BForm,
  BFormGroup,
  BInputGroup,
  BInputGroupAppend,
  BLink,
  BFormInput,
  BButton,
} from "bootstrap-vue";
import { required } from "@validations";
import ToastificationContent from "@core/components/toastification/ToastificationContent.vue";
import { alertMessageMixin } from "@core/mixins/ui/feedback";

export default {
  components: {
    VuexyLogo,
    BAlert,
    BCard,
    BButton,
    BCardTitle,
    BCardText,
    BForm,
    BFormGroup,
    BInputGroup,
    BLink,
    BFormInput,
    BInputGroupAppend,
    ValidationProvider,
    ValidationObserver,
  },
  mixins: [alertMessageMixin],
  data() {
    return {
      password_confirmation: "",
      password: "",
      token: "",
      // validation
      required,

      // Toggle Password
      password1FieldType: "password",
      password2FieldType: "password",
    };
  },
  mounted: function () {
    this.token = this.$route.params.token;
    // this.validateToken();
  },
  computed: {
    password1ToggleIcon() {
      return this.password1FieldType === "password" ? "EyeIcon" : "EyeOffIcon";
    },
    password2ToggleIcon() {
      return this.password2FieldType === "password" ? "EyeIcon" : "EyeOffIcon";
    },
  },
  methods: {
    togglePassword1Visibility() {
      this.password1FieldType =
        this.password1FieldType === "password" ? "text" : "password";
    },
    togglePassword2Visibility() {
      this.password2FieldType =
        this.password2FieldType === "password" ? "text" : "password";
    },
    async validationForm() {
      this.$refs.resetPasswordForm.validate().then(async (success) => {
        if (success) {
          try {
            const response = await this.$http.post("/api/activate-account", {
              token: this.token,
              password_confirmation: this.password_confirmation,
              password: this.password,
            });

            this.$toast({
              component: ToastificationContent,
              props: {
                title: "تم التسجيل بنجاح",
                icon: "CheckCircleIcon",
                variant: "success",
              },
            });
            
            this.displayMessage({
              message: response.data.message,
              type: "success",
            });
            this.$router.push("/login");
            return;
          } catch (error) {
            console.log(error);
            let { message, errors } = error.response.data;
            if (errors) {
              let errorMessage = {
                message: "",
                type: "danger",
              };
              Object.values(errors).forEach((error) => {
                errorMessage.message += `${error[0]}<br>`;
              });
              this.displayMessage(errorMessage);
            }
            this.$toast({
              component: ToastificationContent,
              props: {
                title: message,
                text: message,
                icon: "AlertCircleIcon",
                variant: "danger",
              },
            });
            return;
          }
        }
      });
    },
  },
};
</script>

<style lang="scss">
@import "@core/scss/vue/pages/page-auth.scss";
</style>
