<template>
  <div class="auth-wrapper auth-v1 px-2">
    <div class="auth-inner py-2">

      <!-- Register v1 -->
      <b-card class="mb-0">
        <b-link class="brand-logo">
          <vuexy-logo />
          <h2 class="brand-text text-primary ml-1">
            <%= appName %>
          </h2>
        </b-link>

        <b-card-title class="mb-1">
          <%= title %>
        </b-card-title>
        <b-card-text class="mb-2">
          <%= description %>
        </b-card-text>

  <!-- form -->
        <validation-observer ref="registerForm">
          <b-form
            class="auth-register-form mt-2"
            @submit.prevent="validationForm"
          >
            <!-- name -->
            <b-form-group
              label="الاسم"
              label-for="name"
            >
              <validation-provider
                #default="{ errors }"
                name="الإسم"
                rules="required"
              >
                <b-form-input
                  id="name"
                  v-model="user.name"
                  :state="errors.length > 0 ? false:null"
                  name="register-name"
                  placeholder="الاسم"
                />
                <small class="text-danger">{{ errors[0] }}</small>
              </validation-provider>
            </b-form-group>
            <!-- phone -->
            <b-form-group
              label="الهاتف"
              label-for="phone"
            >
              <validation-provider
                #default="{ errors }"
                name="phone"
                rules="required"
              >
                <b-form-input
                  id="phone"
                  v-model="user.phone"
                  :state="errors.length > 0 ? false:null"
                  name="register-phone"
                  placeholder="+9665555555555"
                />
                <small class="text-danger">{{ errors[0] }}</small>
              </validation-provider>
            </b-form-group>

            <!-- email -->
            <b-form-group
              label="بريد الالكتروني"
              label-for="email"
            >
              <validation-provider
                #default="{ errors }"
                name="Email"
                rules="required|validEmail"
              >
                <b-form-input
                  id="email"
                  v-model="user.email"
                  :state="errors.length > 0 ? false:null"
                  name="register-email"
                  placeholder="youremail@example.sa"
                />
                <small class="text-danger">{{ errors[0] }}</small>
              </validation-provider>
            </b-form-group>

            <!-- password -->
            <b-form-group
              label="كلمه السر"
              label-for="password"
            >
              <validation-provider
                #default="{ errors }"
                name="Password"
                rules="required"
              >
                <b-input-group
                  class="input-group-merge"
                  :class="errors.length > 0 ? 'is-invalid':null"
                >
                  <b-form-input
                    id="password"
                    v-model="user.password"
                    :type="passwordFieldType"
                    :state="errors.length > 0 ? false:null"
                    class="form-control-merge"
                    name="register-password"
                    placeholder="············"
                  />
                  <b-input-group-append is-text>
                    <feather-icon
                      :icon="passwordToggleIcon"
                      class="cursor-pointer"
                      @click="togglePasswordVisibility"
                    />
                  </b-input-group-append>
                </b-input-group>
                <small class="text-danger">{{ errors[0] }}</small>
              </validation-provider>
            </b-form-group>

            <!-- checkbox -->
            <b-form-group>
              <b-form-checkbox
                id="register-privacy-policy"
                v-model="status"
                name="checkbox-1"
              >
                وأنا أوافق على
                <b-link>سياسة الخصوصية وشروطها</b-link>
              </b-form-checkbox>
            </b-form-group>

            <!-- submit button -->
            <b-button
              variant="primary"
              block
              type="submit"
            >
              اشتراك
            </b-button>
          </b-form>
        </validation-observer>

        <b-card-text class="text-center mt-2">
          <span>هل لديك حساب؟ </span>
          <b-link :to="{name:'auth-login-v1'}">
            <span>تسجيل الدخول بدلا من ذلك</span>
          </b-link>
        </b-card-text>
      </b-card>
    <!-- /Register v1 -->
    </div>
  </div>

</template>

<script>
import { ValidationProvider, ValidationObserver } from 'vee-validate'
import {
  BCard, BLink, BCardTitle, BCardText, BForm,
  BButton, BFormInput, BFormGroup, BInputGroup, BInputGroupAppend, BFormCheckbox,
} from 'bootstrap-vue'
import VuexyLogo from '@core/layouts/components/Logo.vue'
import { required, validEmail } from '@validations'
import { togglePasswordVisibility } from '@core/mixins/ui/forms'
import ToastificationContent from '@core/components/toastification/ToastificationContent.vue'
import { alertMessageMixin } from "@core/mixins/ui/feedback";

export default {
  components: {
    VuexyLogo,
    // BSV
    BCard,
    BLink,
    BCardTitle,
    BCardText,
    BForm,
    BButton,
    BFormInput,
    BFormGroup,
    BInputGroup,
    BInputGroupAppend,
    BFormCheckbox,
    // validations
    ValidationProvider,
    ValidationObserver,
  },
  mixins: [togglePasswordVisibility, alertMessageMixin],
  data() {
    return {
      user: {
        email: '',
        name: '',
        password: '',
        phone: ''
      },
      status: '',
      // validation rules
      required,
      validEmail,
    }
  },
  computed: {
    passwordToggleIcon() {
      return this.passwordFieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon'
    },
  },
  
  methods: {
    validationForm() {
      this.$refs.registerForm.validate().then(async (success) => {
        if (success) {
          try {
            const response = await this.$http.post("/register", {
              ...this.user,
              password_confirmation: this.user.password,
            });

            this.$toast({
              component: ToastificationContent,
              props: {
                title: "تم التسجيل بنجاح",
                icon: "CheckCircleIcon",
                variant: "success",
              },
            });
            this.showMessage = true;
            this.message = response.data.message;
          } catch (error) {
            if(error.response) {
            this.$refs.registerForm.setErrors(error.response.data.errors);
            this.$toast({
              component: ToastificationContent,
              props: {
                title: error.response.data.message,
                text: error.response.data.message,
                icon: "AlertCircleIcon",
                variant: "danger",
              },
            });
            }
            console.log(error);
            return;
          }
        }
      })
    },
  },
}
</script>

<style lang="scss">
@import '@core/scss/vue/pages/page-auth.scss';
</style>
