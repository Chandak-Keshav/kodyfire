import axios from '@axios'

export default {
  namespaced: true,
  state: {},
  getters: {},
  mutations: {},
  actions: {
    fetchInvoices(ctx, queryParams) {
      return new Promise((resolve, reject) => {
        axios
          .get('/invoice', { params: queryParams })
          .then(response => resolve(response))
          .catch(error => reject(error))
      })
    },
    fetchInvoice(ctx, { id }) {
      return new Promise((resolve, reject) => {
        axios
          .get(`/invoice/${id}`)
          .then(response => resolve(response))
          .catch(error => reject(error))
      })
    },
    fetchInvoicesOptions(ctx) {
      return new Promise((resolve, reject) => {
        axios
          .get('/invoice/options')
          .then(response => resolve(response))
          .catch(error => reject(error))
      })
    },
    fetchCustomers() {
      return new Promise((resolve, reject) => {
        axios
          .get('/company/customers')
          .then(response => resolve(response))
          .catch(error => reject(error))
      })
    },
    fetchItems() {
      return new Promise((resolve, reject) => {
        axios
          .get('/company/items')
          .then(response => resolve(response))
          .catch(error => reject(error))
      })
    },
    addInvoice(ctx, invoiceData) {
      return new Promise((resolve, reject) => {
        axios
          .post('/invoice', invoiceData)
          .then(response => resolve(response))
          .catch(error => reject(error))
      })
    },
    updateInvoice(ctx, invoiceData) {
      return new Promise((resolve, reject) => {
        axios
          .put(`/invoice/${invoiceData.id}`, invoiceData)
          .then(response => resolve(response))
          .catch(error => reject(error))
      })
    },
    deleteInvoice(ctx, {id}) {
      return new Promise((resolve, reject) => {
        axios
          .delete(`/invoice/${id}`)
          .then(response => resolve(response))
          .catch(error => reject(error))
      })
    },
    downloadInvoice(ctx, {id}) {
      return new Promise((resolve, reject) => {
        axios
          .get(`/invoice/${id}/download`, {
            responseType: 'blob',
            headers: {
              'Accept': 'application/pdf'
            }
          })
          .then(response => resolve(response))
          .catch(error => reject(error))
      })
    },
  },
}
