<?php
      
      namespace App\Repositories;
      
      use DB;
      use Log;
      use Exception;
      use App\Models\\{{name}};
      use App\Storage\DataBag;
      use Illuminate\Support\Facades\Storage;
      
      class {{name}}Repository {
      
          public function create(DataBag $dataBag) {
              $data = $dataBag->get('data');
              DB::beginTransaction();
              try {
                  {{#if hasUplodableMorph}}
                  {{{ attachments }}}
                  {{/if}}
                  $model = {{name}}::create($data);
                  {{{ morphAttachments }}}
                  {{{ additionalMethods }}}
                } catch (\Exception $e) {
                    DB::rollback();
                    throw new Exception($e->getMessage());
                }
                DB::commit();
                return $model;
            }
            
            public function update({{name}} $model, DataBag $dataBag) {
                $data = $dataBag->get('data');
                DB::beginTransaction();
                try {
                  {{{updateAttachments}}}
                  $model->update($data);
              } catch (\Exception $e) {
                  DB::rollback();
                  throw new Exception($e->getMessage());
              }
              DB::commit();
              return $model;
          }
    
          {{{uploadAttachment}}}
      }