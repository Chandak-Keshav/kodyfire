_migration:
  - model: Company
    template: migration.php.template
  - model: User
    template: migration.php.template
  - model: Address
    template: migration.php.template
  - model: Customer
    template: migration.php.template
  - model: InvoiceTemplate
    template: migration.php.template
  - model: Invoice
    template: migration.php.template
  - model: InvoiceAttachment
    template: migration.php.template
  - model: Item
    template: migration.php.template
  - model: InvoiceItem
    template: migration.php.template
  - model: Subscription
    template: migration.php.template
  - model: CompanySubscription
    template: migration.php.template
api:
  - template: api.php.template
auth:
  - template: fortify.php.template
  - template: sanctum.php.template
  - template: cors.php.template
  - template: app.php.template
  - template: auth.php.template
  - template: config.php.template
  - template: provider.php.template
  - template: reset.php.template
  - template: redirectifauthenticated.php.template
config:
  - key: spa_url
    value: env('SPA_URL', 'http://localhost:3000')
controller:
  - model: Company
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: Customer
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: User
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: Address
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: Subscription
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: CompanySubscription
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: InvoiceTemplate
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: Invoice
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: InvoiceAttachment
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: Item
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: InvoiceItem
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: Vendor
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
  - model: Expense
    namespace: App\Http\Controllers\API\V1
    template: controller.php.template
databag:
  - template: databag.php.template
databaseSeed:
  - template: databaseSeed.php.template
dependency:
  - commands:
      - php artisan vendor:publish --provider='AndreasElia\PostmanGenerator\PostmanGeneratorServiceProvider'
        --tag='postman-config'
      - php artisan export:postman
    install: andreaselia/laravel-api-to-postman
    middleware: []
    template: bash.template
factory:
  - model: Company
    namespace: Database\Factories
    template: factory.php.template
  - model: User
    namespace: Database\Factories
    template: factory.php.template
  - model: Address
    namespace: Database\Factories
    template: factory.php.template
  - model: Subscription
    namespace: Database\Factories
    template: factory.php.template
  - model: CompanySubscription
    namespace: Database\Factories
    template: factory.php.template
  - model: Customer
    namespace: Database\Factories
    template: factory.php.template
  - model: InvoiceTemplate
    namespace: Database\Factories
    template: factory.php.template
  - model: Invoice
    namespace: Database\Factories
    template: factory.php.template
  - model: InvoiceAttachment
    namespace: Database\Factories
    template: factory.php.template
  - model: Item
    namespace: Database\Factories
    template: factory.php.template
  - model: InvoiceItem
    namespace: Database\Factories
    template: factory.php.template
  - model: Vendor
    namespace: Database\Factories
    template: factory.php.template
  - model: Expense
    namespace: Database\Factories
    template: factory.php.template
kernel:
  - template: kernel.php.template
migration:
  - filename: 2014_3_17_1650207999106406_create_companies_table.php
    model: Company
    template: migration.php.template
  - filename: 2022_3_20_1650493860801101_create_invoices_table.php
    model: Invoice
    template: migration.php.template
  - filename: 2022_3_20_1650493860817117_create_invoice-items_table.php
    model: InvoiceItem
    template: migration.php.template
  - filename: 2022_4_9_1652096341036336_create_vendors_table.php
    model: Vendor
    template: migration.php.template
  - filename: 2022_4_9_1652096341048348_create_expenses_table.php
    model: Expense
    template: migration.php.template
model:
  - controller:
      actions:
        - middleware: "['auth:sanctum', 'role:company']"
          name: getCustomers
          relation: company->customers
          routeName: company/customers
          type: getUserRelation
        - middleware: "['auth:sanctum', 'role:company']"
          name: getVendors
          relation: company->vendors
          routeName: company/vendors
          type: getUserRelation
        - middleware: "['auth:sanctum', 'role:company']"
          name: getItems
          relation: company->items
          routeName: company/items
          type: getUserRelation
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
            - name: email
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: company
        name: name
        options: []
        type: string
      - arguments: []
        faker_type: phoneNumber
        name: phone
        options: []
        type: string
      - arguments: []
        faker_type: email
        name: email
        options:
          - key: nullable
            value: ''
        type: string
      - arguments: []
        faker_type: imageUrl
        name: logo
        options:
          - key: nullable
            value: ''
        type: string
      - arguments: []
        faker_type: ''
        name: vat
        options:
          - key: default
            value: 15
        type: integer
      - arguments: []
        faker_type: companyIdNumber()
        name: cr
        options:
          - key: nullable
            value: ''
        type: string
      - arguments: []
        faker_type: address
        name: address
        options: []
        type: string
    filename: 2014_3_17_1650207999106406_create_companies_table.php
    fillable:
      - name
      - phone
      - email
      - logo
      - vat
      - cr
      - address
    foreign_keys: []
    name: Company
    namespace: App\Models
    relationships:
      - model: User
        name: user
        type: hasOne
      - model: Address
        name: address
        type: hasOne
      - model: Customer
        name: customers
        type: hasMany
      - model: Item
        name: items
        type: hasMany
      - model: Invoice
        name: invoices
        type: hasMany
      - model: Vendor
        name: vendors
        type: hasMany
      - model: expense
        name: expenses
        type: hasMany
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:admin']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:admin']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:admin']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:admin']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:admin']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: name
        name: name
        options: []
        type: string
        value: Company Admin
      - arguments: []
        faker_type: phoneNumber
        name: phone
        options: []
        type: string
        value: '9665555555'
      - arguments: []
        faker_type: email
        name: email
        options: []
        type: string
        value: company@invoicego.sa
      - arguments: []
        faker_type: password
        isHidden: true
        name: password
        options: []
        type: string
      - arguments:
          - active
          - inactive
        faker_type: ''
        name: status
        options:
          - key: default
            value: active
        type: enum
    filename: 2014_3_17_1650207999119419_create_users_table.php
    fillable:
      - name
      - phone
      - email
      - password
      - company_id
    foreign_keys:
      - column: company_id
        model: Company
        'on': companies
        onDelete: cascade
        onUpdate: cascade
        references: id
    name: User
    namespace: App\Models
    relationships:
      - model: Company
        name: company
        type: belongsTo
    softDelete: false
    template: user_model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: buildingNumber
        name: building_number
        options: []
        type: string
      - arguments: []
        faker_type: streetAddress
        name: street
        options: []
        type: string
      - arguments: []
        faker_type: secondaryAddress
        name: second_number
        options: []
        type: string
      - arguments: []
        faker_type: subdivision
        name: district
        options: []
        type: string
      - arguments: []
        faker_type: postcode
        name: postal_code
        options: []
        type: string
      - arguments: []
        faker_type: city
        name: city
        options: []
        type: string
      - arguments: []
        faker_type: governorate
        name: region
        options: []
        type: string
      - arguments: []
        faker_type: country
        name: country
        options: []
        type: string
    fillable:
      - building_number
      - street
      - second_number
      - district
      - postal_code
      - city
      - region
      - country
    foreign_keys:
      - column: company_id
        model: Company
        'on': companies
        onDelete: cascade
        onUpdate: cascade
        references: id
    name: Address
    namespace: App\Models
    relationships:
      - model: Company
        name: company
        type: belongsTo
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: company()
        name: name
        options: []
        type: string
      - arguments: []
        faker_type: name
        name: display_name
        options: []
        type: string
      - arguments: []
        faker_type: phoneNumber
        name: phone
        options: []
        type: string
      - arguments: []
        faker_type: email
        name: email
        options: []
        type: string
      - arguments: []
        faker_type: randomNumber(5, true)
        name: tax_number
        options: []
        type: string
      - arguments: []
        faker_type: address
        name: address
        options: []
        type: string
      - arguments: []
        faker_type: address
        name: supply_place
        options: []
        type: string
    fillable:
      - name
      - display_name
      - phone
      - email
      - tax_number
      - address
      - supply_place
      - company_id
    foreign_keys:
      - column: company_id
        model: Company
        'on': companies
        onDelete: cascade
        onUpdate: cascade
        references: id
    name: Customer
    namespace: App\Models
    relationships:
      - model: Company
        name: company
        type: belongsTo
    scopes:
      - args: auth()->user()
        name: CompanyScope
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:admin']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:admin']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:admin']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:admin']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:admin']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: name
        name: name
        options: []
        type: string
      - arguments: []
        faker_type: randomDigit
        name: duration
        options: []
        type: integer
      - arguments:
          - 12
          - 2
        faker_type: randomNumber
        name: price
        options: []
        type: decimal
    fillable:
      - name
      - duration
      - price
    foreign_keys: []
    name: Subscription
    namespace: App\Models
    relationships: []
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: company()
        name: name
        options: []
        type: string
      - arguments: []
        faker_type: name
        name: display_name
        options: []
        type: string
      - arguments: []
        faker_type: phoneNumber
        name: phone
        options: []
        type: string
      - arguments: []
        faker_type: email
        name: email
        options: []
        type: string
      - arguments: []
        faker_type: randomNumber(5, true)
        name: tax_number
        options:
          - key: nullable
            value: ''
        type: string
      - arguments: []
        faker_type: address
        name: address
        options: []
        type: string
    fillable:
      - name
      - display_name
      - phone
      - email
      - tax_number
      - address
      - company_id
    foreign_keys:
      - column: company_id
        model: Company
        'on': companies
        onDelete: cascade
        onUpdate: cascade
        references: id
    name: Vendor
    namespace: App\Models
    relationships:
      - model: Expense
        name: expenses
        type: hasMany
      - model: Company
        name: company
        type: belongsTo
    scopes:
      - args: auth()->user()
        name: CompanyScope
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: reference
              type: like
          type: index
          useResource: true
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
          useResource: true
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments:
          - 12
          - 2
        faker_type: randomNumber
        name: price
        options: []
        type: decimal
      - arguments: []
        faker_type: dateTime
        name: pruchase_date
        options: []
        type: dateTime
      - arguments:
          - 12
          - 2
        faker_type: randomFloat(2)
        name: tax
        options: []
        type: decimal
      - arguments: []
        faker_type: sentence
        name: reference
        options:
          - key: nullable
            value: ''
        type: string
      - arguments: []
        faker_type: sentence
        name: note
        options:
          - key: nullable
            value: ''
        type: text
    fillable:
      - price
      - pruchase_date
      - tax
      - reference
      - note
      - company_id
      - vendor_id
    foreign_keys:
      - column: company_id
        model: Company
        'on': companies
        onDelete: cascade
        onUpdate: cascade
        references: id
      - column: vendor_id
        model: Vendor
        'on': vendors
        onDelete: cascade
        onUpdate: cascade
        references: id
    name: Expense
    namespace: App\Models
    relationships:
      - model: Vendor
        name: vendor
        type: belongsTo
      - model: Company
        name: company
        type: belongsTo
    scopes:
      - args: auth()->user()
        name: CompanyScope
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: randomDigit
        name: duration
        options: []
        type: integer
      - arguments:
          - 12
          - 2
        faker_type: randomNumber
        name: price
        options: []
        type: decimal
      - arguments: []
        faker_type: dateTime
        name: expires_at
        options: []
        type: datetime
    fillable:
      - duration
      - price
      - expires_at
      - subscription_id
      - company_id
    foreign_keys:
      - column: subscription_id
        model: Subscription
        'on': subscriptions
        onDelete: cascade
        onUpdate: cascade
        references: id
      - column: company_id
        model: Company
        'on': companies
        onDelete: cascade
        onUpdate: cascade
        references: id
    name: CompanySubscription
    namespace: App\Models
    relationships:
      - model: Subscription
        name: subscription
        type: belongsTo
      - model: Company
        name: company
        type: belongsTo
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: file
        name: name
        options: []
        type: string
    fillable:
      - name
      - model
    foreign_keys: []
    name: InvoiceTemplate
    namespace: App\Models
    relationships: []
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
          useResource: true
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - data:
            filename: $invoice->invoice_number
            relations: "'company', 'customer', 'items'"
            template:
              args:
                - invoice
              name: $invoice->template->name
          middleware: "['auth:sanctum', 'role:company']"
          name: downloadPDF
          routeName: invoice/{invoice}/download
          type: downloadPDF
        - middleware: "['auth:sanctum', 'role:company']"
          name: createWithItems
          relations:
            - name: items
          type: storeWithManyRelation
        - middleware: "['auth:sanctum', 'role:company']"
          name: updateWithItems
          relations:
            - name: items
          type: updateWithManyRelation
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      dependencies:
        - Barryvdh\Snappy\Facades\SnappyPdf as PDF
      middleware: []
      routeType: detailed
    events:
      - creating
    fields:
      - arguments: []
        faker_type: randomNumber
        name: invoice_number
        options: []
        type: string
      - arguments: []
        faker_type: randomNumber
        name: subject
        options:
          - key: nullable
            value: ''
        type: string
      - arguments:
          - 12
          - 2
        faker_type: randomFloat
        name: subtotal
        options: []
        rules: required
        type: decimal
      - arguments:
          - 12
          - 2
        faker_type: randomFloat
        name: tax
        options:
          - key: default
            value: 0
        rules: required
        type: decimal
      - arguments:
          - 12
          - 2
        faker_type: randomFloat
        name: discount
        options:
          - key: default
            value: 0
        type: decimal
      - arguments:
          - 12
          - 2
        faker_type: randomNumber(5, true)
        name: total
        options: []
        rules: required
        type: decimal
      - arguments: []
        faker_type: sentence
        name: note
        options:
          - key: nullable
        type: string
      - arguments:
          - bank_transfer
          - cash
          - check
        faker_type: ''
        name: payment_method
        options:
          - key: default
            value: bank_transfer
        rules: in:bank_transfer,cash,check
        type: enum
      - arguments: []
        faker_type: sentence
        name: payment_terms
        options: []
        type: string
      - arguments:
          - type_1
          - type_2
        faker_type: text
        name: type
        options:
          - key: default
            value: type_1
        type: enum
      - arguments: []
        faker_type: dateTime
        name: invoice_date
        options: []
        rules: required|date
        type: dateTime
      - arguments: []
        faker_type: dateTime
        name: supply_date
        options: []
        rules: required|date
        type: dateTime
      - arguments: []
        faker_type: dateTime
        name: due_date
        options: []
        rules: required|date
        type: dateTime
      - arguments:
          - draft
          - sent
          - paid
          - canceled
        faker_type: ''
        name: status
        options:
          - key: default
            value: draft
        type: enum
    fillable:
      - subject
      - subtotal
      - total
      - tax
      - vat
      - note
      - payment_terms
      - invoice_date
      - supply_date
      - due_date
      - status
      - template_id
      - payment_method
      - company_id
      - customer_id
    foreign_keys:
      - column: template_id
        model: InvoiceTemplate
        'on': invoice_templates
        onDelete: cascade
        onUpdate: cascade
        references: id
      - column: company_id
        model: Company
        'on': companies
        onDelete: cascade
        onUpdate: cascade
        references: id
      - column: customer_id
        model: Customer
        'on': customers
        onDelete: cascade
        onUpdate: cascade
        references: id
        required: true
    name: Invoice
    namespace: App\Models
    relationships:
      - model: InvoiceTemplate
        name: template
        type: belongsTo
      - model: Company
        name: company
        type: belongsTo
      - model: Customer
        name: customer
        type: belongsTo
      - model: InvoiceItem
        name: items
        type: hasMany
    scopes:
      - args: auth()->user()
        name: CompanyScope
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: file
        name: name
        options: []
        type: string
    fillable:
      - name
      - invoice_id
    foreign_keys: []
    name: InvoiceAttachment
    namespace: App\Models
    relationships:
      - model: Invoice
        name: invoice
        type: belongsTo
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments: []
        faker_type: foodName
        name: name
        options: []
        type: string
      - arguments: []
        faker_type: randomFloat
        name: selling_price
        options: []
        type: text
      - arguments: []
        faker_type: dairyName
        name: description
        options: []
        type: mediumText
      - arguments:
          - 12
          - 2
        faker_type: randomFloat
        name: tax
        options: []
        type: decimal
      - arguments:
          - product
          - service
        faker_type: ''
        name: type
        options:
          - key: default
            value: product
        type: enum
    fillable:
      - name
      - selling_price
      - description
      - tax
      - type
      - company_id
    foreign_keys:
      - column: company_id
        model: Company
        'on': companies
        onDelete: cascade
        onUpdate: cascade
        references: id
    hidden: "'created_at', 'updated_at'"
    name: Item
    namespace: App\Models
    relationships:
      - model: Company
        name: company
        type: belongsTo
    softDelete: false
    template: model.php.template
  - controller:
      actions:
        - filterBy: []
          middleware: "['auth:sanctum', 'role:company']"
          name: getAll
          searchBy:
            - name: name
              type: like
          type: index
        - middleware: "['auth:sanctum', 'role:company']"
          name: get
          type: show
        - middleware: "['auth:sanctum', 'role:company']"
          name: create
          type: store
        - middleware: "['auth:sanctum', 'role:company']"
          name: update
          type: update
        - middleware: "['auth:sanctum', 'role:company']"
          name: delete
          type: destroy
      middleware: []
      routeType: detailed
    fields:
      - arguments:
          - 12
          - 2
        faker_type: randomFloat
        name: selling_price
        options: []
        rules: required
        type: decimal
      - arguments: []
        faker_type: foodName
        name: description
        options: []
        type: text
      - arguments: []
        faker_type: randomDigit
        name: qty
        options:
          - key: default
            value: 1
        rules: required|integer|min:1
        type: integer
      - arguments:
          - 12
          - 2
        faker_type: randomFloat
        name: tax
        options:
          - key: nullable
            value: ''
        type: decimal
      - arguments:
          - 12
          - 2
        faker_type: randomFloat
        name: amount
        options: []
        rules: required
        type: decimal
      - arguments:
          - 12
          - 2
        faker_type: randomFloat
        name: discount
        options:
          - key: default
            value: '0'
        type: decimal
    fillable:
      - selling_price
      - qty
      - tax
      - amount
      - discount
      - description
      - item_id
      - invoice_id
    foreign_keys:
      - column: item_id
        model: Item
        'on': items
        onDelete: cascade
        onUpdate: cascade
        references: id
      - column: invoice_id
        model: Invoice
        'on': invoices
        onDelete: cascade
        onUpdate: cascade
        references: id
    name: InvoiceItem
    namespace: App\Models
    relationships:
      - model: Item
        name: item
        type: belongsTo
      - model: Invoice
        name: invoice
        type: belongsTo
    softDelete: false
    template: model.php.template
name: laravel
project: invoice-go-backend
repository:
  - model: Company
    template: repository.php.template
  - model: User
    template: repository.php.template
  - model: Address
    template: repository.php.template
  - model: InvoiceTemplate
    template: repository.php.template
  - model: Invoice
    template: repository.php.template
  - model: InvoiceAttachment
    template: repository.php.template
  - model: Item
    template: repository.php.template
  - model: InvoiceItem
    template: repository.php.template
  - customCreate: auth()->user()->company->customers()->create
    model: Customer
    template: repository.php.template
  - model: Subscription
    template: repository.php.template
  - model: CompanySubscription
    template: repository.php.template
  - customCreate: auth()->user()->company->vendors()->create
    model: Vendor
    template: repository.php.template
  - customCreate: auth()->user()->company->expenses()->create
    model: Expense
    template: repository.php.template
request:
  - model: Company
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: Company
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: User
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: User
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: Customer
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: Customer
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: Address
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: Address
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: Invoice
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: Invoice
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: Item
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: Item
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: Subscription
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: Subscription
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: CompanySubscription
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: CompanySubscription
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: InvoiceTemplate
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: InvoiceTemplate
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: InvoiceAttachment
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: InvoiceAttachment
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: Vendor
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: Vendor
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
  - model: Expense
    namespace: App\Http\Requests
    prefix: Create
    template: request.php.template
  - model: Expense
    namespace: App\Http\Requests
    prefix: Update
    template: request.php.template
roles:
  - admin
  - company
rootDir: ./../invoice-go/backend/
seed:
  - data:
      appName: invoicego
    filename: RolesTableSeeder.php
    model: false
    namespace: Database\Seeders
    template: database/seeders/RolesTableSeeder.php.template
  - model: Company
    namespace: Database\Seeders
    template: seed.php.template
  - data:
      role: company
    model: User
    namespace: Database\Seeders
    template: database/seeders/UsersTableSeeder.php.template
  - model: Address
    namespace: Database\Seeders
    template: seed.php.template
  - model: Subscription
    namespace: Database\Seeders
    template: seed.php.template
  - model: CompanySubscription
    namespace: Database\Seeders
    template: seed.php.template
  - data:
      args:
        - key: company_id
          value: 4
      count: 10
    model: Customer
    namespace: Database\Seeders
    template: seed.php.template
  - data:
      args:
        - key: name
          value: invoices/templates.default
      count: 1
    model: InvoiceTemplate
    namespace: Database\Seeders
    template: seed.php.template
  - data:
      args:
        - key: company_id
          value: '4'
        - key: template_id
          value: '1'
      count: 10
    model: Invoice
    namespace: Database\Seeders
    template: seed.php.template
  - model: InvoiceAttachment
    namespace: Database\Seeders
    template: seed.php.template
  - data:
      args:
        - key: company_id
          value: '4'
      count: 10
    model: Item
    namespace: Database\Seeders
    template: seed.php.template
  - model: InvoiceItem
    namespace: Database\Seeders
    template: seed.php.template
  - data:
      args:
        - key: company_id
          value: 4
      count: 10
    model: Vendor
    namespace: Database\Seeders
    template: seed.php.template
  - data:
      args:
        - key: company_id
          value: 4
      count: 10
    model: Expense
    namespace: Database\Seeders
    template: seed.php.template
web:
  - template: web.php.template
